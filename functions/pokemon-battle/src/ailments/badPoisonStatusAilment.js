// Generated by CoffeeScript 1.12.7
(function() {
  var BadPoisonStatusAilment, PoisonStatusAilment,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  PoisonStatusAilment = require('./poisonStatusAilment');

  BadPoisonStatusAilment = (function(superClass) {
    extend(BadPoisonStatusAilment, superClass);

    function BadPoisonStatusAilment() {
      this.multiplier = 1 / 16;
    }

    BadPoisonStatusAilment.prototype.whenSwitchedOut = function(pokemon) {
      return this.multiplier = 1 / 16;
    };

    BadPoisonStatusAilment.prototype.whenInflicted = function(pokemon, log) {
      return log.message(pokemon.trainerAndName() + " was badly poisoned!");
    };

    BadPoisonStatusAilment.prototype.endTurn = function(pokemon, log) {
      BadPoisonStatusAilment.__super__.endTurn.call(this, pokemon, log);
      return this.multiplier += 1 / 16;
    };

    BadPoisonStatusAilment.prototype.battleMultiplier = function(chance) {
      return 1 + 0.66 * chance / 100;
    };

    return BadPoisonStatusAilment;

  })(PoisonStatusAilment);

  module.exports = BadPoisonStatusAilment;

}).call(this);
