// Generated by CoffeeScript 1.12.7
(function() {
  var ParalysisStatusAilment, StatusAilment,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  StatusAilment = require('./statusAilment');

  ParalysisStatusAilment = (function(superClass) {
    extend(ParalysisStatusAilment, superClass);

    function ParalysisStatusAilment() {
      return ParalysisStatusAilment.__super__.constructor.apply(this, arguments);
    }

    ParalysisStatusAilment.prototype.affects = function(pokemon) {
      var type;
      return indexOf.call((function() {
        var i, len, ref, results;
        ref = pokemon.types;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          type = ref[i];
          results.push(type.name);
        }
        return results;
      })(), 'Electric') < 0;
    };

    ParalysisStatusAilment.prototype.whenInflicted = function(pokemon, log) {
      return log.message(pokemon.trainerAndName() + " was paralyzed! It may be unable to move!");
    };

    ParalysisStatusAilment.prototype.canAttack = function(pokemon, log) {
      if (Math.random() < 0.25) {
        log.message(pokemon.trainerAndName() + " is paralyzed! It can't move!");
        return false;
      }
    };

    ParalysisStatusAilment.prototype.statMultiplier = function(stat) {
      switch (stat) {
        case 'speed':
          return 0.25;
        default:
          return 1;
      }
    };

    ParalysisStatusAilment.prototype.battleMultiplier = function(chance) {
      return 1 + 0.5 * chance / 100;
    };

    return ParalysisStatusAilment;

  })(StatusAilment);

  module.exports = ParalysisStatusAilment;

}).call(this);
